### Healthy vs LFS
fig <- ggplot(data_prop, aes(type, p_20_150) ) +
geom_boxplot(aes(fill = type), outlier.size = 0.5,
position = position_nudge(x = 0.11), width = 0.4) +
geom_flat_violin(aes(fill = type), color = NA, position = position_nudge(x = -0.11), width = 0.5) +
geom_hline(yintercept = healthy_median, linetype = "dashed", color = "red") +
geom_text(data = data_stats_LFS, aes(x = type, y = 0.03, label = N), size = 4) +
geom_text(data = data_stats_LFS, aes(x = type, y = 0.5, label = annot), size = 5.5) +
scale_fill_manual(values = c("grey", "#fb9a99")) +
labs(fill = "") +
xlab("") +
ylab("Proportion under 150bp") +
ggtitle("") +
theme +
scale_y_continuous(limits=c(0, 0.55), expand = c(0,0))
fig
### Previvors
fig_neg <- ggplot(data_prop_neg, aes(type, p_20_150) ) +
geom_boxplot(aes(fill = type), outlier.size = 0.5,
position = position_nudge(x = 0.11), width = 0.4) +
geom_flat_violin(aes(fill = type), color = NA, position = position_nudge(x = -0.11), width = 0.5) +
geom_hline(yintercept = healthy_median, linetype = "dashed", color = "red") +
geom_text(data = data_stats_neg, aes(x = type, y = 0.03, label = N), size = 4) +
geom_text(data = data_stats_neg, aes(x = type, y = 0.5, label = annot), size = 5.5) +
scale_fill_manual(values = c("grey", "#fb9a99")) +
labs(fill = "") +
xlab("") +
ylab("Proportion under 150bp") +
ggtitle("") +
theme +
scale_y_continuous(limits=c(0, 0.55), expand = c(0,0))
fig_neg
### Within LFS
fig_lfs <- ggplot(data_prop, aes(cancer, p_20_150, fill = cancer)) +
geom_boxplot(outlier.size = 0.5,
position = position_nudge(x = 0.11), width = 0.4) +
geom_flat_violin(color = NA, position = position_nudge(x = -0.11), width = 0.5) +
geom_hline(yintercept = healthy_median, linetype = "dashed", color = "red") +
geom_text(data = data_stats_cancer, aes(x = cancer, y = 0.03, label = N), size = 4) +
xlab("") +
ylab("Proportion under 150bp") +
ggtitle("") +
scale_fill_manual(labels = c("Healthy", "Negative", "Positive"),
values = c("grey", "#a6cee3", "#fb9a99")) +
labs(fill = "") +
theme +
scale_y_continuous(limits=c(0, 0.55), expand = c(0,0)) +
stat_compare_means(comparisons = my_comparisons,
method = "t.test",
label = "p.signif",
size = 5,
tip.length = 0,
step.increase = 0.11,
position = 0.2)
fig_lfs
### Previous Cancer
fig_previous <- ggplot(data_prop_LFS[!(data_prop_LFS$previous_cancer == ""), ], aes(previous_cancer, p_20_150, fill = previous_cancer)) +
geom_boxplot(outlier.size = 0.5,
position = position_nudge(x = 0.11), width = 0.4) +
geom_flat_violin(color = NA, position = position_nudge(x = -0.11), width = 0.5) +
geom_text(data = data_stats_previous, aes(x = previous_cancer, y = 0.03, label = N), size = 4) +
geom_hline(yintercept = healthy_median, linetype = "dashed", color = "red") +
xlab("Previous\nCancer") +
ylab("Proportion under 150bp") +
ggtitle("") +
scale_fill_manual(values = c("grey", "#fb9a99")) +
labs(fill = "") +
theme +
scale_y_continuous(limits=c(0, 0.55), expand = c(0,0))
fig_previous
### Age
data_prop_LFS$years <- as.numeric(data_prop_LFS$years)
fig_age <- ggplot(data_prop_LFS, aes(years, p_20_150, color = cancer_status)) +
geom_point(stroke = 0, pch = 16, size = 2, alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE, size = 1, alpha = 0.5) +
stat_regline_equation(label.y = c(0.05, 0.1), label.x = 10, aes(label = ..rr.label..), size = 5) +
geom_hline(yintercept = LFS_median, linetype = "dashed", color = "red") +
ggtitle("Fragment vs Age") +
xlab("Age (years)") +
ylab("Proportion under 150bp") +
labs(fill = "Cancer Status") +
theme(plot.title = element_text(hjust = 0.5, size = 13),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
legend.position = c(0.75, 0.2),
legend.key = element_rect(fill = "white"),
legend.text = element_text(size = 12),
axis.text = element_text(size = 13),
axis.title = element_text(size = 13),
axis.text.x = element_text(angle = 0, hjust = 0.5)) +
scale_color_manual(values = c("black", "red")) +
scale_y_continuous(limits = c(0, 0.4), expand = c(0,0)) +
scale_x_continuous(limits = c(0, 70)) +
guides(fill = guide_legend(ncol = 1,byrow = TRUE))
fig_age
### Mutation Type
data_prop_type <- data_prop_type %>%
group_by(mutation_type) %>%
arrange(p_20_150)
data_stats_type$Xn <- c(1:nrow(data_stats_type))
fig_type <- ggplot(data_prop_type) +
stat_summary(aes(mutation_type, p_20_150),
fun = median, geom = "crossbar", size = 0.2, width = 0.5, group = 1, show.legend = FALSE, color = "red") +
#geom_rect(data = data_stats_type, aes(xmin = Xn - 0.5, xmax = Xn + 0.5, ymin = -Inf, ymax = Inf, fill = mutation_type), alpha = 0.5, stat = "identity") +
geom_boxplot(aes(mutation_type, p_20_150, fill = mutation_type), alpha = 0.5, outlier.shape = NA) +
geom_point(aes(mutation_type, p_20_150, group = mutation_type, color = cancer), alpha = 0.75,
position = position_dodge2(.5), size = 1.5, pch = 16) +
geom_text(data = data_stats_type, aes(x = mutation_type, y = 0.03, label = N), size = 4) +
geom_text(data = data_stats_type, aes(x = mutation_type, y = 0.06, label = paste0("(", patients, ")")), size = 4) +
geom_text(data = data_stats_type, aes(x = mutation_type, y = 0.41, label = annot), size = 5) +
geom_hline(yintercept = healthy_median, linetype = "dashed", color = "red", size = 0.25) +
ggtitle("Germline Mutation Type") +
xlab("") +
ylab("Proportion under 150bp") +
scale_fill_manual(values = c("#FB9A99", "#A6CEE3", "#FDBF6F","#CAB2D6", "grey65", "#B2DF8A")) +
scale_color_manual(values = c("black", "red")) +
labs(fill = "") +
theme +
scale_y_continuous(limits=c(0, 0.45), expand = c(0,0))
fig_type
### Germline mutation
data_prop_germline <- data_prop_germline %>%
group_by(germline_mutation) %>%
arrange(p_20_150)
data_stats_germ$Xn <- c(1:nrow(data_stats_germ))
fig_germ <- ggplot(data_prop_germline) +
stat_summary(aes(germline_mutation, p_20_150),
fun = median, geom = "crossbar", size = 0.2, width = 0.5, group = 1, show.legend = FALSE, color = "red") +
#geom_rect(data = data_stats_germ, aes(xmin = Xn - 0.5, xmax = Xn + 0.5, ymin = -Inf, ymax = Inf, fill = type), alpha = 0.5, stat = "identity") +
geom_boxplot(aes(germline_mutation, p_20_150, fill = mutation_type), alpha = 0.5, outlier.shape = NA) +
geom_point(aes(germline_mutation, p_20_150, group = germline_mutation, color = cancer), alpha = 0.75,
position = position_dodge2(.5), size = 1.5, pch = 16) +
geom_text(data = data_stats_germ, aes(x = germline_mutation, y = 0.03, label = N), size = 4) +
geom_text(data = data_stats_germ, aes(x = germline_mutation, y = 0.06, label = paste0("(", patients, ")")), size = 4) +
geom_text(data = data_stats_germ, aes(x = germline_mutation, y = 0.41, label = annot), size = 5) +
geom_hline(yintercept = LFS_median, linetype = "dashed", color = "red", size = 0.25) +
ggtitle("Germline Mutation") +
xlab("") +
ylab("Proportion under 150bp") +
scale_fill_manual(values = c("#FB9A99", "#A6CEE3", "#FDBF6F", "#CAB2D6", "grey65", "#B2DF8A")) +
scale_color_manual(values = c("black", "red")) +
labs(fill = "Mutation Type", color = "Cancer Status") +
theme +
theme(legend.position = "right") +
scale_y_continuous(limits=c(0, 0.45), expand = c(0,0))
fig_germ
data_stats_fam$Xn <- c(1:nrow(data_stats_fam))
### Family
data_prop_fam <- data_prop_fam %>%
group_by(family) %>%
arrange(p_20_150)
fig_fam <- ggplot(data_prop_fam) +
stat_summary(aes(family, p_20_150),
fun = median, geom = "crossbar", size = 0.2, width = 0.5, group = 1, show.legend = FALSE, color = "red") +
#geom_rect(data = data_stats_fam, aes(xmin = Xn - 0.5, xmax = Xn + 0.5, ymin = -Inf, ymax = Inf, fill = type), alpha = 0.5, stat = "identity") +
geom_boxplot(aes(family, p_20_150, fill = mutation_type), alpha = 0.5, outlier.shape = NA) +
geom_point(aes(family, p_20_150, group = family, color = cancer), alpha = 0.75,
position = position_dodge2(.5), size = 1.5, pch = 16) +
geom_text(data = data_stats_fam, aes(x = family, y = 0.03, label = N), size = 4) +
geom_text(data = data_stats_fam, aes(x = family, y = 0.06, label = paste0("(", patients, ")")), size = 4) +
geom_text(data = data_stats_fam, aes(x = family, y = 0.41, label = annot), size = 5) +
geom_hline(yintercept = healthy_median, linetype = "dashed", color = "red", size = 0.25) +
ggtitle("LFS Family") +
xlab("") +
ylab("Proportion under 150bp") +
scale_fill_manual(breaks = c("Missense 1", "Missense 2", "Missense 3", "Missense 5", "LOF", "Splice", "Mixed"),
values = c("#FB9A99", "#A6CEE3", "#FDBF6F","#CAB2D6", "grey65", "#B2DF8A", "white")) +
scale_color_manual(labels = c("Negative", "Positive"),
values = c("black", "red")) +
labs(fill = "Mutation Type", color = "Cancer Status") +
theme +
theme(legend.position = "right",
axis.text.x = element_text(face = data_stats_fam$text)) +
scale_y_continuous(limits=c(0, 0.45), expand = c(0,0))
fig_fam
### plot read groups
data_reads <- data_reads %>%
group_by(V1) %>%
arrange(p_20_150)
fig_reads <- ggplot(data_reads) +
stat_summary(aes(V1, p_20_150),
fun = median, geom = "crossbar", size = 0.2, width = 0.5, group = 1, show.legend = FALSE, color = "red") +
geom_boxplot(aes(V1, p_20_150), alpha = 0.5, outlier.shape = NA) +
geom_point(aes(V1, p_20_150, group = V1, color = cancer), alpha = 0.75,
position = position_dodge2(.5), size = 1.5, pch = 16) +
geom_text(data = data_stats_group, aes(x = V1, y = 0.03, label = N), size = 4) +
geom_text(data = data_stats_group, aes(x = V1, y = 0.41, label = annot), size = 5) +
geom_hline(yintercept = healthy_median, linetype = "dashed", color = "red", size = 0.25) +
ggtitle("Read Group") +
xlab("") +
ylab("Proportion under 150bp") +
scale_fill_manual(values = c("grey65", "#FB9A99")) +
scale_color_manual(labels = c("Healthy", "Negative", "Positive"),
values = c("black", "black", "red")) +
labs(fill = "Patient", color = "Cancer Status") +
theme +
theme(legend.position = "right") +
scale_y_continuous(limits=c(0, 0.45), expand = c(0,0))
fig_reads
fig_reads <- ggplot(data_reads) +
stat_summary(aes(V1, p_20_150),
fun = median, geom = "crossbar", size = 0.2, width = 0.5, group = 1, show.legend = FALSE, color = "red") +
geom_boxplot(aes(V1, p_20_150), alpha = 0.5, outlier.shape = NA) +
geom_point(aes(V1, p_20_150, group = V1, color = cancer), alpha = 0.75,
position = position_dodge2(.5), size = 1.5, pch = 16) +
geom_text(data = data_stats_group, aes(x = V1, y = 0.03, label = N), size = 4) +
geom_text(data = data_stats_group, aes(x = V1, y = 0.41, label = annot), size = 5) +
geom_hline(yintercept = healthy_median, linetype = "dashed", color = "red", size = 0.25) +
ggtitle("Read Group") +
xlab("") +
ylab("Proportion under 150bp") +
scale_fill_manual(values = c("grey65", "#FB9A99")) +
scale_color_manual(labels = c("Healthy", "Negative", "Positive"),
values = c("green", "black", "red")) +
labs(fill = "Patient", color = "Cancer Status") +
theme +
theme(legend.position = "right") +
scale_y_continuous(limits=c(0, 0.45), expand = c(0,0))
fig_reads
fig_reads <- ggplot(data_reads) +
stat_summary(aes(V1, p_20_150),
fun = median, geom = "crossbar", size = 0.2, width = 0.5, group = 1, show.legend = FALSE, color = "red") +
geom_boxplot(aes(V1, p_20_150), alpha = 0.5, outlier.shape = NA) +
geom_point(aes(V1, p_20_150, group = V1, color = cancer), alpha = 0.75,
position = position_dodge2(.5), size = 1.5, pch = 16) +
geom_text(data = data_stats_group, aes(x = V1, y = 0.03, label = N), size = 4) +
geom_text(data = data_stats_group, aes(x = V1, y = 0.41, label = annot), size = 5) +
geom_hline(yintercept = healthy_median, linetype = "dashed", color = "red", size = 0.25) +
ggtitle("Read Group") +
xlab("") +
ylab("Proportion under 150bp") +
scale_fill_manual(values = c("grey65", "#FB9A99")) +
scale_color_manual(labels = c("Healthy", "Negative", "Positive"),
values = c("blue", "black", "red")) +
labs(fill = "Patient", color = "Cancer Status") +
theme +
theme(legend.position = "right") +
scale_y_continuous(limits=c(0, 0.45), expand = c(0,0))
fig_reads
unique(data_reads$sample)
data_reads$p_20_150[unique(data_reads$sample)]
View(data_prop)
cohort_median <- median(data_prop$p_20_150)
### Attach read groups
groups <- groups[groups$sample %in% data_prop$sample, ]
groups <- bind_rows(groups, groups_n)
data_reads <- merge(data_prop, groups, by.x = "sample", by.y = "sample", all = TRUE)
read_groups <- unique(data_reads$V1)
data_reads$V1 <- factor(data_reads$V1, levels = read_groups,
labels = paste0("run", c(1:length(read_groups))))
data_stats_group <- data_reads %>%
group_by(V1)%>%
dplyr::summarise(Median=median(p_20_150, na.rm = TRUE),
Mean=mean(p_20_150, na.rm = TRUE),
SD=sd(p_20_150, na.rm = TRUE),
N=n())
data_stats_group <- data_stats_group[data_stats_group$N > 2, ]
data_reads <- data_reads[data_reads$V1 %in% data_stats_group$V1, ]
source('~/Library/CloudStorage/GoogleDrive-derekwong90@gmail.com/My Drive/Post-Doc/CHARM/LFS/LFS_fragment/figures/fragment_proportion/fragment_proportion.R')
fig_reads
fig_reads <- ggplot(data_reads) +
stat_summary(aes(V1, p_20_150),
fun = median, geom = "crossbar", size = 0.2, width = 0.5, group = 1, show.legend = FALSE, color = "red") +
geom_boxplot(aes(V1, p_20_150), alpha = 0.5, outlier.shape = NA) +
geom_point(aes(V1, p_20_150, group = V1, color = cancer), alpha = 0.75,
position = position_dodge2(.5), size = 1.5, pch = 16) +
geom_text(data = data_stats_group, aes(x = V1, y = 0.03, label = N), size = 4) +
geom_text(data = data_stats_group, aes(x = V1, y = 0.41, label = annot), size = 5) +
geom_hline(yintercept = cohort_median, linetype = "dashed", color = "red", size = 0.25) +
ggtitle("Read Group") +
xlab("") +
ylab("Proportion under 150bp") +
scale_fill_manual(values = c("grey65", "#FB9A99")) +
scale_color_manual(labels = c("Healthy", "Negative", "Positive"),
values = c("blue", "black", "red")) +
labs(fill = "Patient", color = "Cancer Status") +
theme +
theme(legend.position = "right") +
scale_y_continuous(limits=c(0, 0.45), expand = c(0,0))
fig_reads
ggsave(file.path(outdir, "fragment_proportions_read_group.pdf"), fig_reads, device = "pdf", width = 10, height = 5, units = "in")
ggsave(file.path(outdir, "fragment_proportions_read_group.pdf"), fig_reads, device = "pdf", width = 10, height = 4, units = "in")
### Healthy vs LFS
fig <- ggplot(data_prop, aes(type, p_20_150) ) +
geom_boxplot(aes(fill = type), outlier.size = 0.5,
position = position_nudge(x = 0.11), width = 0.4) +
geom_flat_violin(aes(fill = type), color = NA, position = position_nudge(x = -0.11), width = 0.5) +
geom_hline(yintercept = healthy_median, linetype = "dashed", color = "red") +
geom_text(data = data_stats_LFS, aes(x = type, y = 0.03, label = N), size = 4) +
geom_text(data = data_stats_LFS, aes(x = type, y = 0.5, label = annot), size = 5.5) +
scale_fill_manual(values = c("grey", "#fb9a99")) +
labs(fill = "") +
xlab("") +
ylab("Proportion under 150bp") +
ggtitle("") +
theme +
scale_y_continuous(limits=c(0, 0.55), expand = c(0,0))
fig
### Previvors
fig_neg <- ggplot(data_prop_neg, aes(type, p_20_150) ) +
geom_boxplot(aes(fill = type), outlier.size = 0.5,
position = position_nudge(x = 0.11), width = 0.4) +
geom_flat_violin(aes(fill = type), color = NA, position = position_nudge(x = -0.11), width = 0.5) +
geom_hline(yintercept = healthy_median, linetype = "dashed", color = "red") +
geom_text(data = data_stats_neg, aes(x = type, y = 0.03, label = N), size = 4) +
geom_text(data = data_stats_neg, aes(x = type, y = 0.5, label = annot), size = 5.5) +
scale_fill_manual(values = c("grey", "#fb9a99")) +
labs(fill = "") +
xlab("") +
ylab("Proportion under 150bp") +
ggtitle("") +
theme +
scale_y_continuous(limits=c(0, 0.55), expand = c(0,0))
fig_neg
### Within LFS
fig_lfs <- ggplot(data_prop, aes(cancer, p_20_150, fill = cancer)) +
geom_boxplot(outlier.size = 0.5,
position = position_nudge(x = 0.11), width = 0.4) +
geom_flat_violin(color = NA, position = position_nudge(x = -0.11), width = 0.5) +
geom_hline(yintercept = healthy_median, linetype = "dashed", color = "red") +
geom_text(data = data_stats_cancer, aes(x = cancer, y = 0.03, label = N), size = 4) +
xlab("") +
ylab("Proportion under 150bp") +
ggtitle("") +
scale_fill_manual(labels = c("Healthy", "Negative", "Positive"),
values = c("grey", "#a6cee3", "#fb9a99")) +
labs(fill = "") +
theme +
scale_y_continuous(limits=c(0, 0.55), expand = c(0,0)) +
stat_compare_means(comparisons = my_comparisons,
method = "t.test",
label = "p.signif",
size = 5,
tip.length = 0,
step.increase = 0.11,
position = 0.2)
fig_lfs
### Previous Cancer
fig_previous <- ggplot(data_prop_LFS[!(data_prop_LFS$previous_cancer == ""), ], aes(previous_cancer, p_20_150, fill = previous_cancer)) +
geom_boxplot(outlier.size = 0.5,
position = position_nudge(x = 0.11), width = 0.4) +
geom_flat_violin(color = NA, position = position_nudge(x = -0.11), width = 0.5) +
geom_text(data = data_stats_previous, aes(x = previous_cancer, y = 0.03, label = N), size = 4) +
geom_hline(yintercept = healthy_median, linetype = "dashed", color = "red") +
xlab("Previous\nCancer") +
ylab("Proportion under 150bp") +
ggtitle("") +
scale_fill_manual(values = c("grey", "#fb9a99")) +
labs(fill = "") +
theme +
scale_y_continuous(limits=c(0, 0.55), expand = c(0,0))
fig_previous
fig_age <- ggplot(data_prop_LFS, aes(years, p_20_150, color = cancer_status)) +
geom_point(stroke = 0, pch = 16, size = 2, alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE, size = 1, alpha = 0.5) +
stat_regline_equation(label.y = c(0.05, 0.1), label.x = 10, aes(label = ..rr.label..), size = 5) +
geom_hline(yintercept = LFS_median, linetype = "dashed", color = "red") +
ggtitle("Fragment vs Age") +
xlab("Age (years)") +
ylab("Proportion under 150bp") +
labs(fill = "Cancer Status") +
theme(plot.title = element_text(hjust = 0.5, size = 13),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
legend.position = c(0.75, 0.2),
legend.key = element_rect(fill = "white"),
legend.text = element_text(size = 12),
axis.text = element_text(size = 13),
axis.title = element_text(size = 13),
axis.text.x = element_text(angle = 0, hjust = 0.5)) +
scale_color_manual(values = c("black", "red")) +
scale_y_continuous(limits = c(0, 0.4), expand = c(0,0)) +
scale_x_continuous(limits = c(0, 70)) +
guides(fill = guide_legend(ncol = 1,byrow = TRUE))
fig_age
ggsave(file.path(outdir, "fragment_proportions_lfs.pdf"), fig, device = "pdf", width = 2.5, height = 4, units = "in")
ggsave(file.path(outdir, "fragment_proportions_lfsh.pdf"), fig_neg, device = "pdf", width = 2.5, height = 4, units = "in")
ggsave(file.path(outdir, "fragment_proportions_lfs_status.pdf"), fig_lfs, device = "pdf", width = 3, height = 4, units = "in")
ggsave(file.path(outdir, "fragment_proportions_lfs_history.pdf"), fig_previous, device = "pdf", width = 2.5, height = 4, units = "in")
ggsave(file.path(outdir, "fragment_proportions_age_reg.pdf"), fig_age, device = "pdf", width = 4.5, height = 5, units = "in")
ggsave(file.path(outdir, "fragment_proportions_type.pdf"), fig_type, device = "pdf", width = 4.5, height = 5, units = "in") d
ggsave(file.path(outdir, "fragment_proportions_read_group.pdf"), fig_reads, device = "pdf", width = 10, height = 4, units = "in")
Figure_sup <- ggarrange(fig_type, fig_fam, align = "h", widths = c(0.3, 1), nrow = 1)
Figure_sup
ggsave(file.path(outdir, "fragment_proportions_sup.pdf"), Figure_sup, device = "pdf", width = 12, height = 5, units = "in")
source('~/Library/CloudStorage/GoogleDrive-derekwong90@gmail.com/My Drive/Post-Doc/CHARM/LFS/LFS_fragment/figures/fragment_proportion/fragment_proportion.R')
ggsave(file.path(outdir, "fragment_proportions_age_reg.pdf"), fig_age, device = "pdf", width = 6, height = 4, units = "in")
source('~/Library/CloudStorage/GoogleDrive-derekwong90@gmail.com/My Drive/Post-Doc/CHARM/LFS/LFS_fragment/figures/fragment_proportion/fragment_proportion.R')
model <- aov(p_20_150 ~ V1, data = data_reads)
View(model)
summary(model)
anova_p <- model[[1]][["Pr(>F)"]]
anova_result <- summary(model)
anova_p <- anova_result[[1]][["Pr(>F)"]]
anova_p <- round(anova_result[[1]][["Pr(>F)"]], 3)
anova_p <- round(anova_result[[1]][["Pr(>F)"]], 4)
anova_p <- anova_p[[1]]
source('~/Library/CloudStorage/GoogleDrive-derekwong90@gmail.com/My Drive/Post-Doc/CHARM/LFS/LFS_fragment/figures/telomeres/telomeres.R')
library(matrixStats)
### Set variables
path <- "/Users/derekwong/Library/CloudStorage/OneDrive-UHN/Post-Doc/CHARM_Project/LFS"
healthy_path <- "/Users/derekwong/Library/CloudStorage/OneDrive-UHN/Post-Doc/Healthy_control_cohorts/CHARM_HBC"
outdir <- "/Users/derekwong/Library/CloudStorage/GoogleDrive-derekwong90@gmail.com/My Drive/Post-Doc/CHARM/LFS/LFS_fragment/figures/telomeres"
source("//Users/derekwong/My Drive/Post-Doc/CHARM/LFS/Figures/TP53_griffin/geom_flat_violin.R")
### Read in data
samples <- read.delim(file.path(path, "samples/sample_list.txt"))
data_contexts <- read.delim(list.files(path, "TelomereHunter_contexts_normalized.txt", recursive = TRUE, full.names = TRUE))
data_percents <- read.delim(list.files(path, "TelomereHunter_contexts_percent.txt", recursive = TRUE, full.names = TRUE))
data_summaries <- read.delim(list.files(path, "TelomereHunter_summaries.txt", recursive = TRUE, full.names = TRUE))
data_telseq <- read.delim(list.files(path, "TelSeq.txt", recursive = TRUE, full.names = TRUE))
data_prop <- read.delim(list.files(path, "proportions.txt", recursive = TRUE, full.names = TRUE))
healthy_samples <- read.delim(list.files(healthy_path, "sample_list.txt", recursive = TRUE, full.names = TRUE))
healthy_contexts <- read.delim(list.files(healthy_path, "TelomereHunter_contexts_normalized.txt", recursive = TRUE, full.names = TRUE))
healthy_percents <- read.delim(list.files(healthy_path, "TelomereHunter_contexts_percent.txt", recursive = TRUE, full.names = TRUE))
healthy_summaries <- read.delim(list.files(healthy_path, "TelomereHunter_summaries.txt", recursive = TRUE, full.names = TRUE))
healthy_telseq <- read.delim(list.files(healthy_path, "TelSeq.txt", recursive = TRUE, full.names = TRUE))
healthy_prop <- read.delim(list.files(healthy_path, "proportions.txt", recursive = TRUE, full.names = TRUE))
### Remove failed samples and format sample list
exclude <- c("TGL49_0025_Cf_U_PE_321_WG", "TGL49_0035_Cf_U_PE_310_WG", "TGL49_0041_Cf_U_PE_317_WG", "TGL49_0209_Cf_U_PE_373_WG")
samples <- samples[!(samples$sWGS %in% exclude), ]
samples <- samples[samples$sWGS %in% data_telseq$Library, ]
healthy_samples <- healthy_samples[healthy_samples$sWGS %in% healthy_telseq$Library, ]
samples <- bind_rows(samples, healthy_samples)
samples[is.na(samples)] <- "HBC"
### Format sequence contexts from TelomereHunter
data_contexts <- data_summaries[, colnames(data_summaries) %in% c("sample", "tel_content")]
data_contexts$diag <- "LFS"
healthy_contexts <- healthy_summaries[, colnames(healthy_summaries) %in% c("sample", "tel_content")]
healthy_contexts$diag <- "HBC"
contexts <- dplyr::bind_rows(data_contexts, healthy_contexts)
contexts <- merge(contexts, samples, by.x = "sample", by.y = "sWGS")
contexts$cancer_status <- factor(contexts$cancer_status, levels = c("HBC", "negative", "positive"),
labels = c("Healthy", "LFS Negative", "LFS Positive"))
### Format summaries from TelomereHunter
data_summaries$diag <- "LFS"
healthy_summaries$diag <- "HBC"
summaries <- dplyr::bind_rows(data_summaries, healthy_summaries)
summaries <- merge(summaries, samples, by.x = "sample", by.y = "sWGS")
### Format TelSeq data
data_telseq$diag <- "LFS"
healthy_telseq$diag <- "HBC"
telseq <- dplyr::bind_rows(data_telseq, healthy_telseq)
telseq <- merge(telseq, samples, by.x = "Library", by.y = "sWGS")
telseq$cancer_status <- factor(telseq$cancer_status, levels = c("HBC", "negative", "positive"),
labels = c("Healthy", "LFS Negative", "LFS Positive"))
### Set theme and colors
theme <- theme(plot.title = element_text(hjust = 0.5, size = 13),
axis.line = element_line(colour = "black"),
axis.text.y = element_text(angle = 0, hjust = 1, vjust = 0.5),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
legend.position = "none",
legend.key = element_rect(fill = "white"),
legend.text = element_text(size = 12),
legend.background = element_blank(),
axis.text = element_text(size = 13),
axis.title = element_text(size = 13))
col <- c("grey65", "#FB9A99", "#FB9A99", "#FB9A99", "#FB9A99", "#FB9A99", "#FB9A99")
### Create comparison matrix for TelomereHunter to TelSeq
comparison_telseq <- telseq[, colnames(telseq) %in% c("Library", "tel_norm", "diag")]
comparison_summaries <- summaries[, colnames(summaries) %in% c("sample", "tel_content")]
comparison <- merge(comparison_telseq, comparison_summaries, by.x = "Library", by.y = "sample")
comparison <- merge(comparison, samples, by.x = "Library", by.y = "sWGS", all = TRUE)
rm(comparison_telseq, comparison_summaries)
plot_comparison <- ggplot(comparison, aes(tel_content, tel_norm, color = diag)) +
geom_point(pch = 16, alpha = 1) +
geom_line(stat = "smooth", method = "lm", se = FALSE, alpha = 0.5, size = 1) +
stat_regline_equation(aes(label = ..rr.label..), label.y = c(100, 50, 25), label.x = 100, size = 5) +
scale_color_manual(values = c("red", "black")) +
xlab("TelomereHunter (TRPM)") +
ylab("TelSeq (TRPM)") +
labs(color = "Patient Type") +
ggtitle("") +
theme +
theme(legend.position = "bottom")
plot_comparison
ggsave(file.path(outdir, "telomere_sup_1.pdf"), plot_comparison, device = "pdf", width = 5, height = 5, units = "in")
plot_telhun <- ggplot(contexts[!(contexts$diag == "HBC"), ], aes(years, tel_content, color = cancer_status)) +
geom_point(pch = 16) +
geom_line(stat = "smooth", method = "lm", se = FALSE, alpha = 0.25, size = 1) +
stat_regline_equation(label.y = c(200, 225), label.x = 10, aes(label = ..rr.label..)) +
scale_color_manual(values = c("black", "red")) +
xlab("Age (Years)") +
ylab("Telomere Content (TRPM)") +
ggtitle("Telomere Hunter") +
theme +
scale_y_continuous(limits = c(0, 250))
### Plot each analysis vs age
contexts$years <- as.numeric(contexts$years)
plot_telhun
### Plot each analysis vs age
contexts$years <- as.numeric(contexts$years)
plot_telhun <- ggplot(contexts[!(contexts$diag == "HBC"), ], aes(years, tel_content, color = cancer_status)) +
geom_point(pch = 16) +
geom_line(stat = "smooth", method = "lm", se = FALSE, alpha = 0.25, size = 1) +
stat_regline_equation(label.y = c(200, 225), label.x = 10, aes(label = ..rr.label..)) +
scale_color_manual(values = c("black", "red")) +
xlab("Age (Years)") +
ylab("Telomere Content (TRPM)") +
ggtitle("Telomere Hunter") +
theme +
scale_y_continuous(limits = c(0, 250))
plot_telhun
